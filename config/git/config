[user]
	name = nsxz
	email = alien_yip@qq.com
[init]
	defaultBranch = main
[credential "https://github.com"]
	helper = 
	helper = !/usr/bin/gh auth git-credential
[credential "https://gist.github.com"]
	helper = 
	helper = !/usr/bin/gh auth git-credential
[credential]
	helper = store
[status]
	submoduleSummary = true
[alias]
	# View abbreviated SHA, description, and history graph of the latest 20 commits.
	l = log --pretty=oneline -n 20 --graph --abbrev-commit

	# View the current working tree status using the short format.
	s = status -s

        #
        st = config credential.helper store

	# Show the diff between the latest commit and the current state.
	d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"

	# `git di $number` shows the diff between the state `$number` revisions ago and the current state.
	di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"

	# Pull in remote changes for the current repository and all its submodules.
	pl = pull --recurse-submodules

	# Commit all changes.
	ca = !git add -A && git commit -av

	# Switch to a branch, creating it if necessary.
	br = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"

	# Show verbose output about tags, branches or remotes
	tags = tag -l
	branches = branch --all
	remotes = remote --verbose

	# Destroy all local changes and reset to HEAD.
	hreset = reset --hard HEAD

	# Reset previous commit, but keep all the associated changes. Useful for avoiding nasty git merge commits.
	uncommit = reset --soft HEAD^

	# Show the user email for the current repository.
	whoami = config user.email
[branch]
	# Show most recently changed branches first.
	sort = -committerdate

[pull]
	rebase = true

[rebase]
	autoStash = true

[help]
	# Automatically correct and execute mistyped commands.
	autocorrect = 1
